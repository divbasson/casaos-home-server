name: Codacy Security Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '29 23 * * 3'

permissions:
  contents: read

jobs:
  codacy-security-scan:
    permissions:
      contents: read
      security-events: write
      actions: read
    name: Codacy Security Scan
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Set output to environment file
      - name: Set SARIF output path
        run: echo "sarif_file=results.sarif" >> $GITHUB_ENV
        
      # Run Gitleaks for security checks
      - name: Gitleaks Scan Action
        uses: FathAllaTechOps/gitleaks-action@v1.2.0
        with:
          source: .
          fail-on-error: false # optional, default is false

      # Run Codacy Analysis CLI to generate SARIF output
      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@d840f886c4bd4edc059706d09c6a1586111c540b
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 2147483647

      # Debugging step to check if the SARIF file is present
      - name: List output directory
        run: ls -l

      # Upload SARIF results
      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ env.sarif_file }}
